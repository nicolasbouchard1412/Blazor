@page "/learnBlazor/bindProp"
@using Tangy_Models.LearnBlazorModel

<h2 class="text-success">Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product playground</h3><hr />
        <div> Active: <input type="checkbox" @bind="@Product.IsActive" @bind:event="oninput" /></div>
        <div> Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /></div>
        <div>
            Properties:
            <select @bind="selectedProp">
                @foreach (var prop in @Product.Properties)
                {
                    <option value="@prop.Key">@prop.Value</option>
                };
            </select>
        </div>
    </div>
    <br />
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product summary</h3><hr />
        Name: @Product.Name
        <br />
        Active: @Product.IsActive
        <br />
        Price: @Product.Price
        <br />
        This product is: @(Product.IsActive ? "Active" : "Inactive")
        <br />
        Property selected: @selectedProp
        <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Value: @Product.Properties.FirstOrDefault(p => p.Key == @selectedProp).Value</p>
        }
    </div>
</div>
<br />

<div class="col-12 pt-4">
    <h2 class="text-success">Product list</h2>
    <table class="table table-striped">
        <thead>
            <tr>
                <td>@nameof(Product.Name)</td>
                <td>@nameof(Product.Price)</td>
                <td>@nameof(Product.IsActive)</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td><input type="text" @bind-value="@product.Name" @bind-value:event="oninput" /></td>
                    <td><input type="text" @bind-value="@product.Price" @bind-value:event="oninput" /></td>
                    <td><input type="checkbox" @bind="@product.IsActive" /></td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />

<h2 class="text-success">Product list summary</h2>
@foreach (var product in Products)
{
    <div class="row border p-3">
        @product.Name [@product.Price] is @(product.IsActive?"active":"inactive")
    </div>
}

@code {
    private string selectedProp = "";

    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Produit",
            IsActive = true,
            Price = 10.99,
            Properties = new List<DemoProduct_Prop>()
            {
                new DemoProduct_Prop { Id = 1, Key = "Color", Value="Black" },
                new DemoProduct_Prop { Id = 2, Key = "Flavor", Value="Rose Jasmine" },
                new DemoProduct_Prop { Id = 3, Key = "Size", Value="20oz" },
            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 12.99,
                Properties = new List<DemoProduct_Prop>()
                {
                    new DemoProduct_Prop { Id = 1, Key = "Flavor", Value = "Rose" },
                    new DemoProduct_Prop { Id = 2, Key = "Size", Value = "20oz" },
                    new DemoProduct_Prop { Id = 3, Key = "Color", Value = "Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 25.99,
                Properties = new List<DemoProduct_Prop>()
                {
                    new DemoProduct_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                    new DemoProduct_Prop { Id = 2, Key = "Size", Value = "18oz" },
                    new DemoProduct_Prop { Id = 3, Key = "Color", Value = "White" }
                }
            });

        base.OnInitialized();
    }
}
